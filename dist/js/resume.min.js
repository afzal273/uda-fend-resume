/*

This file contains all of the code running in the background that makes resumeBuilder.js possible. We call these helper functions because they support your code in this course.

Don't worry, you'll learn what's going on in this file throughout the course. You won't need to make any changes to it until you start experimenting with inserting a Google Map in Problem Set 3.

Cameron Pittman
*/


/*
These are HTML strings. As part of the course, you'll be using JavaScript functions
replace the %data% placeholder text you see in them.
*/
var HTMLheaderName = '<h1 id="name">%data%</h1>';
var HTMLheaderRole = '<span class="black-text">%data%</span><hr/>';

var HTMLcontactGeneric = '<li class="flex-item"><span class="orange-text">%contact%</span><span class="white-text">%data%</span></li>';
var HTMLmobile = '<li class="flex-item"><span class="zocial-call"></span><span class="white-text">%data%</span></li>';
var HTMLemail = '<li class="flex-item"><span class="zocial-email"></span><span class="white-text">%data%</span></li>';
var HTMLtwitter = '<li class="flex-item"><span class="zocial-twitter"></span><span class="white-text">%data%</span></li>';
var HTMLgithub = '<li class="flex-item"><span class="zocial-github"></span><span class="white-text">%data%</span></li>';
var HTMLblog = '<li class="flex-item"><span class="zocial-blogger"></span><span class="white-text">%data%</span></li>';
var HTMLlocation = '<li class="flex-item"><span class="zocial-statusnet"></span><span class="white-text">%data%</span></li>';

var HTMLbioPic = '<img src="%data%" class="biopic">';
var HTMLWelcomeMsg = '<span class="welcome-message">%data%</span>';

var HTMLskillsStart = '<h3 id="skillsH3">Skills at a Glance:</h3><ul id="skills" class="flex-box"></ul>';
var HTMLskills = '<li class="flex-item"><span class="white-text">%data%</span></li>';

var HTMLworkStart = '<div class="work-entry"></div>';
var HTMLworkEmployer = '<a href="#">%data%';
var HTMLworkTitle = ' - %data%</a>';
var HTMLworkDates = '<div class="date-text">%data%</div>';
var HTMLworkLocation = '<div class="location-text">%data%</div>';
var HTMLworkDescription = '<p><br>%data%</p>';

var HTMLprojectStart = '<div class="project-entry"></div>';
var HTMLprojectTitle = '<a href="#">%data%</a>';
var HTMLprojectDates = '<div class="date-text">%data%</div>';
var HTMLprojectDescription = '<p><br>%data%</p>';
var HTMLprojectImage = '<img src="%data%">';

var HTMLschoolStart = '<div class="education-entry"></div>';
var HTMLschoolName = '<a href="#">%data%';
var HTMLschoolDegree = ' -- %data%</a>';
var HTMLschoolDates = '<div class="date-text">%data%</div>';
var HTMLschoolLocation = '<div class="location-text">%data%</div>';
var HTMLschoolMajor = '<em><br>Major: %data%</em>';

var HTMLonlineClasses = '<h3 class="online-class-heading">Online Classes</h3>';
var HTMLonlineTitle = '<a href="#">%data%';
var HTMLonlineSchool = ' - %data%</a>';
var HTMLonlineDates = '<div class="date-text">%data%</div>';
var HTMLonlineURL = '<br><a href="#">%data%</a>';

var internationalizeButton = '<button>Internationalize</button>';
var googleMap = '<div id="map"></div>';


/*
The International Name
*/
$(document).ready(function() {
    $('button').click(function() {
        var iName = inName(name) || function() {};
        $('#name').html(iName);
    });
});

/*
The next few lines about clicks are for the Collecting Click Locations
*/
clickLocations = [];

function logClicks(x, y) {
    clickLocations.push({
        x: x,
        y: y
    });
    console.log('x location: ' + x + '; y location: ' + y);
}

$(document).click(function(loc) {
    // your code goes here!
});



/*
Here's where we generate the custom Google Map for the website.
See the documentation below for more details.
https://developers.google.com/maps/documentation/javascript/reference
*/
var map; // declares a global map variable


/*
 initializeMap() is called when page is loaded.
*/
function initializeMap() {

    var locations;

    var mapOptions = {
        disableDefaultUI: true
    };

    // This next line makes `map` a new Google Map JavaScript Object and attaches it to
    // <div id="map">, which is appended as part of an exercise late in the course.
    map = new google.maps.Map(document.querySelector('#map'), mapOptions);


    /*
    locationFinder() returns an array of every location string from the JSONs
    written for bio, education, and work.
    */
    function locationFinder() {

        // initializes an empty array
        var locations = [];

        // adds the single location property from bio to the locations array
        locations.push(bio.contacts.location);

        // iterates through school locations and appends each location to
        // the locations array
        for (var school in education.schools) {
            locations.push(education.schools[school].location);
        }

        // iterates through work locations and appends each location to
        // the locations array
        for (var job in work.jobs) {
            locations.push(work.jobs[job].location);
        }
        return locations;
    }

    /*
    createMapMarker(placeData) reads Google Places search results to create map pins.
    placeData is the object returned from search results containing information
    about a single location.
    */
    function createMapMarker(placeData) {

        // The next lines save location data from the search result object to local variables
        var lat = placeData.geometry.location.lat(); // latitude from the place service
        var lon = placeData.geometry.location.lng(); // longitude from the place service
        var name = placeData.formatted_address; // name of the place from the place service
        var bounds = window.mapBounds; // current boundaries of the map window

        var searchName = name.substr(0, name.lastIndexOf(","));
        var wikiUrl = 'http://en.wikipedia.org/w/api.php?action=opensearch&search=' + searchName +
            '&format=json&callback=wikiCallback';

        // marker is an object with additional data about the pin for a single location
        var marker = new google.maps.Marker({
            map: map,
            position: placeData.geometry.location,
            title: name
        });


        // do an ajax request and wiki links for the city to display in infowindow
        var contentString = '<div class="wikipedia-container">' +
            '<h5 id="wikipedia-header">Relevant Wikipedia Links about ' + name + '</h5>' + '<ul id="wikipedia-links">';

        $.ajax({
            url: wikiUrl,
            dataType: "jsonp",
            async: false,
            success: function(response) {
                var articleList = response[1];

                for (var i = 0; i < articleList.length; i++) {
                    var articleStr = articleList[i];
                    var url = 'http://en.wikipedia.org/wiki/' + articleStr;
                    contentString += '<li><a href="' + url + '">' + articleStr + '</a></li>';
                }
                contentString += '</ul></div>';
            },
            error: function(resp) {
                console.log("error: " + resp);
                contentString = name;
            }

        });

        // infoWindows are the little helper windows that open when you click
        // or hover over a pin on a map. They usually contain more information
        // about a location.
        var infoWindow = new google.maps.InfoWindow({
            content: contentString
        });

        // hmmmm, I wonder what this is about...
        google.maps.event.addListener(marker, 'click', function() {
            // your code goes here!
            infoWindow.open(map, marker);
        });

        // this is where the pin actually gets added to the map.
        // bounds.extend() takes in a map location object
        bounds.extend(new google.maps.LatLng(lat, lon));
        // fit the map to the new marker
        map.fitBounds(bounds);
        // center the map
        map.setCenter(bounds.getCenter());
    }

    /*
    callback(results, status) makes sure the search returned results for a location.
    If so, it creates a new map marker for that location.
    */
    function callback(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
            createMapMarker(results[0]);
        }
    }

    /*
    pinPoster(locations) takes in the array of locations created by locationFinder()
    and fires off Google place searches for each location
    */
    function pinPoster(locations) {

        // creates a Google place search service object. PlacesService does the work of
        // actually searching for location data.
        var service = new google.maps.places.PlacesService(map);

        // Iterates through the array of locations, creates a search object for each location
        for (var place in locations) {

            // the search request object
            var request = {
                query: locations[place]
            };

            // Actually searches the Google Maps API for location data and runs the callback
            // function with the search results after each search.
            service.textSearch(request, callback);
        }
    }

    // Sets the boundaries of the map based on pin locations
    window.mapBounds = new google.maps.LatLngBounds();

    // locations is an array of location strings returned from locationFinder()
    locations = locationFinder();

    // pinPoster(locations) creates pins on the map for each location in
    // the locations array
    pinPoster(locations);

}

/*
Uncomment the code below when you're ready to implement a Google Map!
*/

// Calls the initializeMap() function when the page loads
window.addEventListener('load', initializeMap);

// Vanilla JS way to listen for resizing of the window
// and adjust map bounds
window.addEventListener('resize', function(e) {
    // Make sure the map bounds get updated on page resize
    map.fitBounds(mapBounds);
});

//Defining Objects

var bio = {
    name: 'Afzal Syed',
    role: 'Sr. Software Engineer',
    contacts: {
        email: 'afzal@afzalsyed.com',
        mobile: '123-456-7890',
        twitter: '@afzalsyed',
        github: 'https://github.com/afzal273',
        location: 'San Jose, CA',
        blog: 'afzalsyed.com'
    },
    bioPic: 'images/fry.jpg',
    welcomeMessage: 'Where there is a will there is a way!',
    skills: ['HTML/CSS', 'JavaScript', 'jQuery', 'Python', 'Ruby', 'Java', 'PHP', 'Perl', 'Objective-C', 'Swift'],
    display: function() {


        $('#header').prepend(HTMLheaderRole.replace('%data%', this.role));
        $('#header').prepend(HTMLheaderName.replace('%data%', this.name));


        var formattedMobile = HTMLmobile.replace('%data%', this.contacts.mobile);
        var formattedbioPic = HTMLbioPic.replace('%data%', this.bioPic);
        var formattedWelcomeMessage = HTMLWelcomeMsg.replace('%data%', this.welcomeMessage);
        var formattedEmail = HTMLemail.replace('%data%', this.contacts.email);
        var formattedTwitter = HTMLtwitter.replace('%data%', this.contacts.twitter);
        var formattedGithub = HTMLgithub.replace('%data%', this.contacts.github);
        var formattedLocation = HTMLlocation.replace('%data%', this.contacts.location);

        $('#topContacts').append(formattedMobile);
        $('#topContacts').append(formattedEmail);
        $('#topContacts').append(formattedGithub);
        $('#topContacts').append(formattedTwitter);
        $('#topContacts').append(formattedLocation);

        $('#footerContacts').append(formattedMobile);
        $('#footerContacts').append(formattedEmail);
        $('#footerContacts').append(formattedGithub);
        $('#footerContacts').append(formattedTwitter);
        $('#footerContacts').append(formattedLocation);
        $('#main').append(work.position);
        $('#main').append(education.name);

        $('#header').append(formattedWelcomeMessage);
        $('#header').append(formattedbioPic);

        if (this.skills) {
            $('#header').append(HTMLskillsStart);
            var formattedSkill;
            $.each(bio.skills, function(_, skill) {
                $('#skills').append(HTMLskills.replace('%data%', skill));
            });

        }

    }
};

var work = {
    jobs: [{
            employer: 'abcDef',
            title: 'Sr. Software Engineer',
            dates: 'July 2015 - Present',
            location: 'San Mateo, CA',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias deserunt dolorem ea eligendi eos est exercitationem fuga id magnam maiores minima nobis, nostrum pariatur perspiciatis praesentium recusandae rerum, sunt suscipit. Accusamus architecto cumque doloremque esse in itaque maxime molestiae obcaecati provident, quis repellat sed tempora unde. Assumenda commodi consequuntur est necessitatibus nostrum pariatur possimus rerum tempora voluptate! Dignissimos distinctio dolorum ea eius ex facere id impedit magnam, modi nostrum provident quasi repellat reprehenderit similique velit veniam vero vitae! Dolores eveniet explicabo hic iusto, nisi quidem sapiente soluta! Ab accusamus adipisci aliquid, animi deleniti ducimus ea error est ex explicabo fuga fugit illo maiores nihil obcaecati placeat tempora ut veniam voluptates voluptatibus. A accusantium adipisci at autem blanditiis commodi corporis deleniti dignissimos doloremque doloribus enim esse ex fugiat hic, id iste laborum laudantium magnam modi non obcaecati odit officia officiis, quia quidem quis, quos ratione recusandae similique suscipit totam voluptatem voluptates.'
        }, {
            title: 'Sr. DevOps Engineer',
            employer: 'Hij Klmno',
            dates: 'Mar 2015 - July 2015',
            location: 'Sunnyvale, CA',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam asperiores dolorem eaque earum eos esse excepturi facere, laborum libero necessitatibus omnis porro, praesentium quis repellat saepe sed tenetur velit veritatis vitae voluptatem. Accusantium ad aliquid animi aperiam at atque consectetur consequatur cum cupiditate delectus dicta dolor dolore dolores doloribus enim eos est, eum excepturi facilis harum in ipsa ipsum iusto laborum maxime molestias mollitia neque nesciunt quibusdam quo quos ratione rem reprehenderit repudiandae, saepe similique sit. Ad aut consequatur consequuntur dolorem doloremque eos et eum, eveniet explicabo hic, id laborum minus molestias nemo non nostrum odio quia quis quo quos rem saepe temporibus veniam vitae voluptate. Ab accusantium, dicta dignissimos dolores error et explicabo facilis harum hic iste laborum mollitia non quaerat, quia reprehenderit saepe sit suscipit tempora totam ullam. Accusamus alias aperiam corporis dicta ducimus, maxime natus quasi rerum veniam. Accusamus doloribus ea impedit necessitatibus provident quibusdam sapiente tenetur.'
        }, {
            title: 'Software Developer',
            employer: 'Hij Klmno',
            dates: 'May 2014 - Mar 2015',
            location: 'Sunnyvale, CA',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus consectetur eos explicabo id impedit saepe sapiente. Aliquam consequuntur corporis deleniti est eveniet facilis iste nobis, officiis quo. Ab accusantium assumenda dolore ducimus earum excepturi expedita explicabo, hic laboriosam laudantium minima minus nisi non nostrum numquam quis quisquam repudiandae sint sunt tenetur. Culpa delectus deleniti, distinctio eum illo non sequi? Eligendi id illum impedit laboriosam magnam necessitatibus placeat porro praesentium, provident quaerat quis ratione saepe suscipit totam ullam velit voluptatibus. Accusamus accusantium asperiores aut beatae, corporis cupiditate delectus dicta distinctio doloribus ducimus ea earum eius enim eos esse eum explicabo illo illum iste iure iusto magni nam nulla odit optio porro quae quas quos reprehenderit repudiandae saepe sed, sint sunt tempora velit voluptatem voluptates. Ad aliquid assumenda culpa dolore eligendi enim esse et harum, magni minus obcaecati porro quod repudiandae sed similique velit voluptas voluptatem! Earum eius excepturi tempora ut veniam!'
        }

    ],
    display: function() {
        if (this.jobs) {
            $('#workExperience').append(HTMLworkStart);
            $.each(this.jobs, function(_, job) {
                $('.work-entry:last-child').append(HTMLworkEmployer.replace('%data%', job.employer) + HTMLworkTitle.replace('%data%', job.title));
                $('.work-entry:last-child').append(HTMLworkDates.replace('%data%', job.dates));
                $('.work-entry:last-child').append(HTMLworkLocation.replace('%data%', job.location));
                $('.work-entry:last-child').append(HTMLworkDescription.replace('%data%', job.description));
            });

        }

    }

};

var education = {
    schools: [{
        name: 'University of Kansas',
        location: 'Lawrence, KS',
        degree: 'Masters',
        majors: ['Electrical Engineering', 'Computer Engineering'],
        dates: '2005-2007',
        url: 'www.ku.edu'


    }, {
        name: 'Jawaharlal Nehru Technological University',
        location: 'Hyderabad, India',
        degree: 'BS',
        majors: ['Electronics and Communications Engineering'],
        dates: '2001-2005',
        url: 'http://www.jntuh.ac.in'
    }],
    onlineCourses: [{
        title: 'Intro to HTML/CSS',
        school: 'Udacity',
        dates: '2015',
        url: 'www.udacity.com'
    }, {
        title: 'Intro to JavaScript',
        school: 'Udacity',
        dates: '2016',
        url: 'www.udacity.com'
    }, {
        title: 'Intro to Jquery',
        school: 'Udacity',
        dates: '2016',
        url: 'www.udacity.com'
    }],
    display: function() {
        if (this.schools) {
            $('#education').append(HTMLschoolStart);
            $.each(this.schools, function(_, school) {
                $('.education-entry:last-child').append(HTMLschoolName.replace('%data%', school.name) + HTMLschoolDegree.replace('%data%', school.degree));
                $('.education-entry:last-child').append(HTMLschoolDates.replace('%data%', school.dates));
                $('.education-entry:last-child').append(HTMLschoolLocation.replace('%data%', school.location));
                $('.education-entry:last-child').append(HTMLschoolMajor.replace('%data%', school.majors.join(', ')));
            });
        }

        if (this.onlineCourses) {
            $('.education-entry:last-child').append(HTMLonlineClasses);
            $.each(this.onlineCourses, function(_, course) {
                $('.education-entry:last-child').append(HTMLonlineTitle.replace('%data%', course.title) + HTMLonlineSchool.replace('%data%', course.school));
                $('.education-entry:last-child').append(HTMLonlineDates.replace('%data%', course.dates));
                $('.education-entry:last-child').append(HTMLonlineURL.replace('%data%', course.url));
            });
        }

    }
};

var projects = {
    'projects': [{
            'title': 'Kiva ioS App',
            'dates': '2015',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores earum eius excepturi officiis optio repudiandae similique ullam. Atque ea perferendis perspiciatis repellendus ut. Architecto blanditiis commodi, cupiditate explicabo facilis fugiat fugit itaque, libero nemo nulla perspiciatis suscipit tenetur veritatis! Architecto consequatur laborum minima officiis porro ratione rerum sint sit temporibus!',
            'images': ['images/boat-featured-200x150_small.jpg', 'images/flowers-featured-200x150_small.jpg']
        }, {
            'title': 'Coreloop - Social Shopping',
            'dates': '2014',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores cupiditate deserunt dignissimos ducimus eveniet libero magni minima, nemo optio placeat repellat repellendus reprehenderit, voluptate. Asperiores atque blanditiis cumque, esse explicabo itaque natus officiis perspiciatis placeat quo ratione saepe voluptatibus! Accusantium autem eaque earum nisi praesentium sint, soluta temporibus! Nisi, vero.',
            'images': ['images/peacock-featured-200x150_small.jpg', 'images/boat-featured-200x150_small.jpg']
        }, {
            'title': 'Vizualiser - Online Dashboards',
            'dates': '2014',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque consequatur dignissimos dolore enim est fugiat fugit impedit ipsam nam, nemo nostrum obcaecati officiis perspiciatis quia sint temporibus ut vel voluptate? Asperiores autem consequatur et fugiat illo itaque nam porro quidem quis tenetur! Cupiditate fugit nam nemo saepe sit, unde voluptas.',
            'images': ['images/flowers-featured-200x150_small.jpg', 'images/peacock-featured-200x150_small.jpg']
        }

    ],
    display: function() {
        if (this.projects) {
            $('#projects').append(HTMLprojectStart);
            $.each(this.projects, function(_, project) {
                $('.project-entry:last-child').append(HTMLprojectTitle.replace('%data%', project.title));
                $('.project-entry:last-child').append(HTMLprojectDates.replace('%data%', project.dates));
                $('.project-entry:last-child').append(HTMLprojectDescription.replace('%data%', project.description));
                //get all images
                if (this.images) {
                    var imageData = '';
                    $.each(this.images, function(_, image) {
                        imageData += HTMLprojectImage.replace('%data%', image);
                    });
                    $('.project-entry:last-child').append(imageData);
                }

            });
        }
    }

};

bio.display();
education.display();
work.display();
projects.display();

$('#mapDiv').append(googleMap);
